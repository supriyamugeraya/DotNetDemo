// <auto-generated />
using System;
using DotNetDemo.API.DbData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetDemo.API.Migrations
{
    [DbContext(typeof(WalksDbContext))]
    [Migration("20250909143246_Adding Images Table")]
    partial class AddingImagesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetDemo.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4143d42d-7be9-4363-8069-a123470ca381"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("3b5f62f5-1c41-4393-9a8a-bd559cbc188d"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("d9154729-7057-421f-9eb6-0ff2159d3dd7"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("DotNetDemo.API.Models.Domain.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtention")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("DotNetDemo.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("65a5490a-d2ff-4163-ae3c-c34cc42350c0"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://cdn.holidayguru.ch/wp-content/uploads/2017/03/skyline-von-auckland-istock_49893056_large-2.jpg"
                        },
                        new
                        {
                            Id = new Guid("cb7682a7-76b3-43b1-900a-c7f6f33ea915"),
                            Code = "NTL",
                            Name = "Northland"
                        },
                        new
                        {
                            Id = new Guid("b8ccb03b-7c2a-4335-9735-2b13be4aa34b"),
                            Code = "BOP",
                            Name = "Bay of Plenty"
                        },
                        new
                        {
                            Id = new Guid("a0a5c0ae-9a84-4110-a925-0c44e74ed31c"),
                            Code = "WGN",
                            Name = "Wellington",
                            RegionImageUrl = "https://datacom.com/content/dam/images/admin/insights/experience/ai-attitudes-research-report/nz/WellingtonCity.jpg"
                        },
                        new
                        {
                            Id = new Guid("fba177f6-df80-4918-9a16-1a0f55a2a020"),
                            Code = "NSN",
                            Name = "Nelson",
                            RegionImageUrl = "https://i.natgeofe.com/n/6784d56f-a792-4d57-9a05-f6a9500dd2f2/68382.jpg"
                        },
                        new
                        {
                            Id = new Guid("bd4b05e3-0e09-4d7e-bb74-6c684aca998e"),
                            Code = "STL",
                            Name = "Southland"
                        });
                });

            modelBuilder.Entity("DotNetDemo.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("DotNetDemo.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("DotNetDemo.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotNetDemo.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
